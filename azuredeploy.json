{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.6.18.56646",
      "templateHash": "10374819962890316544"
    }
  },
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "vstsbuild",
      "metadata": {
        "description": "Admin username for the Virtual Machine."
      }
    },
    "sshPublicKey": {
      "type": "secureString",
      "metadata": {
        "description": "The public key of the SSH key used to sign in to the VM as the admin user."
      }
    },
    "azureDevOpsUrl": {
      "type": "string",
      "metadata": {
        "description": "The Azure DevOps Organisation URL to associate this build agent to."
      }
    },
    "personalAccessToken": {
      "type": "secureString",
      "metadata": {
        "description": "The Personal Access Token (PAT) needed to register a build agent with Azure DevOps"
      }
    },
    "addressSpace": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Address space for the virtual network. This should be in CIDR format with a /24 range."
      }
    },
    "managementIP": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "IP address from which to allow SSH access to the VM subnet (optional)."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location for the resources"
      }
    }
  },
  "variables": {
    "prefix": "[take(uniqueString(resourceGroup().id), 4)]",
    "vnetname": "[format('{0}-build-vnet', variables('prefix'))]",
    "kvname": "[format('{0}-build-kv', variables('prefix'))]",
    "vmname": "buildvm1",
    "acrname": "[format('{0}devacr', variables('prefix'))]",
    "msiname": "[format('{0}-buildagent-msi', variables('prefix'))]"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[variables('msiname')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "network",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vnetName": {
            "value": "[variables('vnetname')]"
          },
          "addressSpace": {
            "value": "[parameters('addressSpace')]"
          },
          "managementIP": {
            "value": "[parameters('managementIP')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.6.18.56646",
              "templateHash": "16236053233138393605"
            }
          },
          "parameters": {
            "vnetName": {
              "type": "string"
            },
            "addressSpace": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location for the resources"
              }
            },
            "managementIP": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "IP address from which to allow SSH access to the VM subnet."
              }
            }
          },
          "variables": {
            "addressSpaceList": "[split(parameters('addressSpace'), ',')]",
            "cidrParts": "[split(variables('addressSpaceList')[0], '/')]",
            "addressSpaceParts": "[split(variables('cidrParts')[0], '.')]",
            "addressPrefix24": "[format('{0}.{1}.{2}', variables('addressSpaceParts')[0], variables('addressSpaceParts')[1], variables('addressSpaceParts')[2])]",
            "vmsubnetName": "buildagents",
            "sshRule": {
              "name": "Allow-SSH",
              "properties": {
                "priority": 100,
                "description": "Allow SSH from fixed location",
                "access": "Allow",
                "direction": "Inbound",
                "sourceAddressPrefix": "[parameters('managementIP')]",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "22",
                "protocol": "Tcp"
              }
            },
            "sshNatPool": {
              "name": "ssh",
              "properties": {
                "backendPort": 22,
                "frontendPortRangeStart": 22001,
                "frontendPortRangeEnd": 22099,
                "frontendIPConfiguration": {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', 'lb-vms', 'public-ip')]"
                },
                "backendAddressPool": {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'lb-vms', 'buildvms')]"
                },
                "protocol": "Tcp"
              }
            },
            "privatednszones": [
              "[format('privatelink.blob.{0}', environment().suffixes.storage)]",
              "privatelink.vaultcore.azure.net",
              "privatelink.azurecr.io"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-08-01",
              "name": "default-nsg",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": []
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-08-01",
              "name": "agent-nsg",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": "[if(empty(parameters('managementIP')), createArray(), createArray(variables('sshRule')))]"
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-08-01",
              "name": "bastion-nsg",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "Allow-SecureWeb",
                    "properties": {
                      "priority": 100,
                      "description": "Allow HTTPS traffic from the Internet to the Azure Bastion",
                      "access": "Allow",
                      "direction": "Inbound",
                      "sourceAddressPrefix": "Internet",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "80",
                      "protocol": "Tcp"
                    }
                  },
                  {
                    "name": "Allow-ControlPlane",
                    "properties": {
                      "priority": 110,
                      "description": "Allow Azure control-plane access to Azure Bastion",
                      "access": "Allow",
                      "direction": "Inbound",
                      "sourceAddressPrefix": "GatewayManager",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "443",
                      "protocol": "Tcp"
                    }
                  },
                  {
                    "name": "Allow-DataPlane-In",
                    "properties": {
                      "priority": 120,
                      "description": "Allow Azure control-plane access to Azure Bastion",
                      "access": "Allow",
                      "direction": "Inbound",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "destinationPortRanges": [
                        "8080",
                        "5701"
                      ],
                      "protocol": "*"
                    }
                  },
                  {
                    "name": "Allow-LoadBalancerProbe",
                    "properties": {
                      "priority": 130,
                      "description": "Allow HTTPS traffic from the LB to the Azure Bastion",
                      "access": "Allow",
                      "direction": "Inbound",
                      "sourceAddressPrefix": "AzureLoadBalancer",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "80",
                      "protocol": "Tcp"
                    }
                  },
                  {
                    "name": "Allow-SSHRDPOut",
                    "properties": {
                      "priority": 100,
                      "description": "Allow Basition access to VMs",
                      "access": "Allow",
                      "direction": "Outbound",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "destinationPortRanges": [
                        "22",
                        "3380"
                      ],
                      "protocol": "*"
                    }
                  },
                  {
                    "name": "Allow-DataPlane-Out",
                    "properties": {
                      "priority": 110,
                      "description": "Allow Azure control-plane access from Azure Bastion",
                      "access": "Allow",
                      "direction": "Outbound",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "destinationPortRanges": [
                        "8080",
                        "5701"
                      ],
                      "protocol": "*"
                    }
                  },
                  {
                    "name": "Allow-Azure-Out",
                    "properties": {
                      "priority": 120,
                      "description": "Allow Bastion access to Azure public endpoints",
                      "access": "Allow",
                      "direction": "Outbound",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "AzureCloud",
                      "destinationPortRange": "443",
                      "protocol": "Tcp"
                    }
                  },
                  {
                    "name": "Allow-Session-Out",
                    "properties": {
                      "priority": 130,
                      "description": "Allow Bastion access to certificate validation",
                      "access": "Allow",
                      "direction": "Outbound",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "Internet",
                      "destinationPortRange": "80",
                      "protocol": "*"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2021-08-01",
              "name": "[parameters('vnetName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": "[variables('addressSpaceList')]"
                },
                "subnets": [
                  {
                    "name": "[variables('vmsubnetName')]",
                    "properties": {
                      "addressPrefix": "[format('{0}.0/26', variables('addressPrefix24'))]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'agent-nsg')]"
                      }
                    }
                  },
                  {
                    "name": "bastion",
                    "properties": {
                      "addressPrefix": "[format('{0}.64/26', variables('addressPrefix24'))]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'bastion-nsg')]"
                      }
                    }
                  },
                  {
                    "name": "PrivateEndpoints",
                    "properties": {
                      "addressPrefix": "[format('{0}.192/26', variables('addressPrefix24'))]",
                      "privateEndpointNetworkPolicies": "Disabled",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'default-nsg')]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'agent-nsg')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'bastion-nsg')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'default-nsg')]"
              ]
            },
            {
              "copy": {
                "name": "privatedns",
                "count": "[length(variables('privatednszones'))]"
              },
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[variables('privatednszones')[copyIndex()]]",
              "location": "global",
              "properties": {}
            },
            {
              "copy": {
                "name": "privatednslinks",
                "count": "[length(variables('privatednszones'))]"
              },
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', variables('privatednszones')[copyIndex()], uniqueString(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))))]",
              "location": "global",
              "properties": {
                "virtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                },
                "registrationEnabled": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privatednszones')[copyIndex()])]"
              ]
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2021-08-01",
              "name": "pip-loadbalancer",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAllocationMethod": "Static"
              }
            },
            {
              "type": "Microsoft.Network/loadBalancers",
              "apiVersion": "2021-08-01",
              "name": "lb-vms",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "frontendIPConfigurations": [
                  {
                    "name": "public-ip",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'pip-loadbalancer')]"
                      }
                    }
                  }
                ],
                "backendAddressPools": [
                  {
                    "name": "buildvms"
                  }
                ],
                "outboundRules": [
                  {
                    "name": "defaultout",
                    "properties": {
                      "frontendIPConfigurations": [
                        {
                          "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', 'lb-vms', 'public-ip')]"
                        }
                      ],
                      "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'lb-vms', 'buildvms')]"
                      },
                      "protocol": "All"
                    }
                  }
                ],
                "inboundNatRules": "[if(empty(parameters('managementIP')), createArray(), createArray(variables('sshNatPool')))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', 'pip-loadbalancer')]"
              ]
            }
          ],
          "outputs": {
            "vmsubnet": {
              "type": "string",
              "value": "[variables('vmsubnetName')]"
            },
            "pesubnetid": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))).subnets[2].id]"
            },
            "lbBePoolId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/loadBalancers', 'lb-vms')).backendAddressPools[0].id]"
            },
            "blobdnszoneid": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/privateDnsZones', variables('privatednszones')[0])]"
            },
            "kvdnszoneid": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/privateDnsZones', variables('privatednszones')[1])]"
            },
            "crdnszoneid": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/privateDnsZones', variables('privatednszones')[2])]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "keyvault",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyvaultname": {
            "value": "[variables('kvname')]"
          },
          "pattoken": {
            "value": "[parameters('personalAccessToken')]"
          },
          "privatednszoneid": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network')).outputs.kvdnszoneid.value]"
          },
          "subnetid": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network')).outputs.pesubnetid.value]"
          },
          "servicePrincipalObjectId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('msiname'))).principalId]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.6.18.56646",
              "templateHash": "9073718954849158263"
            }
          },
          "parameters": {
            "keyvaultname": {
              "type": "string",
              "metadata": {
                "description": "The name of the keyvault"
              }
            },
            "pattoken": {
              "type": "secureString",
              "metadata": {
                "description": "The PAT token needed to register a build agent with Azure DevOps"
              }
            },
            "subnetid": {
              "type": "string"
            },
            "privatednszoneid": {
              "type": "string"
            },
            "servicePrincipalObjectId": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2019-09-01",
              "name": "[format('{0}/{1}', parameters('keyvaultname'), 'DevOpsPAT')]",
              "properties": {
                "value": "[parameters('pattoken')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultname'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}/{1}', format('pe-{0}', parameters('keyvaultname')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config",
                    "properties": {
                      "privateDnsZoneId": "[parameters('privatednszoneid')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('pe-{0}', parameters('keyvaultname')))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2019-09-01",
              "name": "[parameters('keyvaultname')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "family": "A",
                  "name": "premium"
                },
                "tenantId": "[subscription().tenantId]",
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 7,
                "networkAcls": {
                  "bypass": "None",
                  "defaultAction": "Deny",
                  "ipRules": []
                },
                "accessPolicies": [
                  {
                    "tenantId": "[subscription().tenantId]",
                    "objectId": "[parameters('servicePrincipalObjectId')]",
                    "permissions": {
                      "secrets": [
                        "get"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2021-02-01",
              "name": "[format('pe-{0}', parameters('keyvaultname'))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('subnetid')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "KeyVault",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultname'))]",
                      "groupIds": [
                        "vault"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultname'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('msiname'))]",
        "[resourceId('Microsoft.Resources/deployments', 'network')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "tfstatestorage",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "stgaccountname": {
            "value": "[format('{0}tfstate', variables('prefix'))]"
          },
          "privatednszoneid": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network')).outputs.blobdnszoneid.value]"
          },
          "subnetid": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network')).outputs.pesubnetid.value]"
          },
          "buildAgentServicePrincipalObjectId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('msiname'))).principalId]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.6.18.56646",
              "templateHash": "9095244110652158070"
            }
          },
          "parameters": {
            "stgaccountname": {
              "type": "string"
            },
            "subnetid": {
              "type": "string"
            },
            "privatednszoneid": {
              "type": "string"
            },
            "buildAgentServicePrincipalObjectId": {
              "type": "string",
              "defaultValue": ""
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location for the resources"
              }
            }
          },
          "variables": {
            "storageBlobDataContributorId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2021-09-01",
              "name": "[format('{0}/{1}/{2}', parameters('stgaccountname'), 'default', 'tfstate')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('stgaccountname'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2021-09-01",
              "name": "[format('{0}/{1}/{2}', parameters('stgaccountname'), 'default', 'build')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('stgaccountname'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2021-09-01",
              "name": "[format('{0}/{1}', parameters('stgaccountname'), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('stgaccountname'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}', format('pe-{0}', parameters('stgaccountname')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config",
                    "properties": {
                      "privateDnsZoneId": "[parameters('privatednszoneid')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('pe-{0}', parameters('stgaccountname')))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-09-01",
              "name": "[parameters('stgaccountname')]",
              "location": "[parameters('location')]",
              "kind": "StorageV2",
              "sku": {
                "name": "Standard_LRS"
              },
              "properties": {
                "accessTier": "Hot",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "supportsHttpsTrafficOnly": true,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Deny",
                  "ipRules": [],
                  "virtualNetworkRules": []
                }
              }
            },
            {
              "condition": "[greater(length(parameters('buildAgentServicePrincipalObjectId')), 0)]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('stgaccountname'))]",
              "name": "[guid(variables('storageBlobDataContributorId'), parameters('buildAgentServicePrincipalObjectId'), resourceId('Microsoft.Storage/storageAccounts', parameters('stgaccountname')))]",
              "properties": {
                "roleDefinitionId": "[variables('storageBlobDataContributorId')]",
                "principalId": "[parameters('buildAgentServicePrincipalObjectId')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('stgaccountname'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2021-08-01",
              "name": "[format('pe-{0}', parameters('stgaccountname'))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('subnetid')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "KeyVault",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('stgaccountname'))]",
                      "groupIds": [
                        "Blob"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('stgaccountname'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('msiname'))]",
        "[resourceId('Microsoft.Resources/deployments', 'network')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "devContainerRegistry",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('acrname')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "subnetid": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network')).outputs.pesubnetid.value]"
          },
          "privatednszoneid": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network')).outputs.crdnszoneid.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.6.18.56646",
              "templateHash": "13567468639014864644"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "subnetid": {
              "type": "string"
            },
            "privatednszoneid": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}', format('pe-{0}', parameters('name')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config",
                    "properties": {
                      "privateDnsZoneId": "[parameters('privatednszoneid')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('pe-{0}', parameters('name')))]"
              ]
            },
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2021-12-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Premium"
              },
              "properties": {
                "adminUserEnabled": true,
                "dataEndpointEnabled": true,
                "anonymousPullEnabled": false,
                "networkRuleSet": {
                  "defaultAction": "Deny",
                  "ipRules": [],
                  "virtualNetworkRules": []
                },
                "networkRuleBypassOptions": "None",
                "publicNetworkAccess": "Disabled"
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2021-08-01",
              "name": "[format('pe-{0}', parameters('name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('subnetid')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "ContainerRegistry",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]",
                      "groupIds": [
                        "registry"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'network')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "buildvm",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "agentPool": {
            "value": "Default"
          },
          "devOpsServer": {
            "value": "[parameters('azureDevOpsUrl')]"
          },
          "keyVaultName": {
            "value": "[variables('kvname')]"
          },
          "subNetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network')).outputs.vmsubnet.value]"
          },
          "vNetName": {
            "value": "[variables('vnetname')]"
          },
          "vNetResourceGroup": {
            "value": "[resourceGroup().name]"
          },
          "vmName": {
            "value": "[variables('vmname')]"
          },
          "sshPublicKey": {
            "value": "[parameters('sshPublicKey')]"
          },
          "lbBePoolId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network')).outputs.lbBePoolId.value]"
          },
          "msiResourceGroup": {
            "value": "[resourceGroup().name]"
          },
          "msiName": {
            "value": "[variables('msiname')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.6.18.56646",
              "templateHash": "16341115110772581634"
            }
          },
          "parameters": {
            "vmName": {
              "type": "string",
              "metadata": {
                "description": "The machine name to use for the VM."
              }
            },
            "vNetName": {
              "type": "string",
              "metadata": {
                "description": "The name of the virtual network."
              }
            },
            "subNetName": {
              "type": "string",
              "metadata": {
                "description": "The name of the subnet to deploy the server into."
              }
            },
            "vNetResourceGroup": {
              "type": "string",
              "metadata": {
                "description": "The virtual network resource group."
              }
            },
            "instanceSize": {
              "type": "string",
              "defaultValue": "Standard_D2ds_v4",
              "metadata": {
                "description": "The VM size to deploy."
              }
            },
            "adminUsername": {
              "type": "string",
              "defaultValue": "vstsbuild",
              "metadata": {
                "description": "Admin username for the Virtual Machine."
              }
            },
            "sshPublicKey": {
              "type": "string",
              "metadata": {
                "description": "The SSH public key for the admin account."
              }
            },
            "devOpsServer": {
              "type": "string",
              "metadata": {
                "description": "The url of the Azure DevOps tenant, e.g. https://dev.azure.com/mydevops"
              }
            },
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "The name of the KeyVault that has the Azure DevOps PAT stored as a secret."
              }
            },
            "patTokenSecretName": {
              "type": "string",
              "defaultValue": "DevOpsPAT",
              "metadata": {
                "description": "The name of the secret in KeyVault containing the Azure DevOps PAT."
              }
            },
            "agentPool": {
              "type": "string",
              "defaultValue": "Default",
              "metadata": {
                "description": "The name of the Agent Pool to register the agent in."
              }
            },
            "dataDiskSize": {
              "type": "int",
              "defaultValue": 256,
              "allowedValues": [
                64,
                128,
                256,
                512,
                1024
              ],
              "metadata": {
                "description": "The size of the data disk provisioned for storing Docker images"
              }
            },
            "lbBePoolId": {
              "type": "string",
              "metadata": {
                "description": "The resource id of the backend pool on the load balancer."
              }
            },
            "msiResourceGroup": {
              "type": "string",
              "metadata": {
                "description": "The resource group the user assigned managed identity is in."
              }
            },
            "msiName": {
              "type": "string",
              "metadata": {
                "description": "The name of the user assigned managed identity."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location for the resources"
              }
            }
          },
          "variables": {
            "prefix": "[take(uniqueString(resourceGroup().id), 4)]",
            "prefixedVMName": "[format('{0}-{1}', variables('prefix'), toLower(parameters('vmName')))]",
            "nicName": "[format('{0}-nic', variables('prefixedVMName'))]",
            "dataDiskName": "[format('{0}-data', variables('prefixedVMName'))]",
            "diagnosticsStorageAccountName": "[format('{0}diagnostics{1}', variables('prefix'), take(uniqueString(resourceId('Microsoft.Compute/virtualMachines', variables('prefixedVMName'))), 4))]",
            "cloudInit": "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",
            "customScriptFormat": "#!/bin/bash\n\ncloud-init status --wait\n\n/root/vstsagent.sh -s \"{0}\" -k \"{1}\" -t \"{2}\" -a \"{3}\" -v \"{4}\" -p \"{5}\"\n\n[ -f /var/run/reboot-required ] && shutdown -r +1 || :\n",
            "agentName": "[format('{0}-Agent', parameters('vmName'))]",
            "customScript": "[format(variables('customScriptFormat'), parameters('devOpsServer'), parameters('keyVaultName'), parameters('patTokenSecretName'), variables('agentName'), extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vNetResourceGroup')), 'Microsoft.Network/virtualNetworks', parameters('vNetName')), parameters('agentPool'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', variables('prefixedVMName'), 'CustomScript')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                  "script": "[base64(variables('customScript'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('prefixedVMName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2021-08-01",
              "name": "[variables('nicName')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vNetResourceGroup')), 'Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', parameters('vNetName'), parameters('subNetName')), '/')[0], split(format('{0}/{1}', parameters('vNetName'), parameters('subNetName')), '/')[1])]"
                      },
                      "loadBalancerBackendAddressPools": [
                        {
                          "id": "[parameters('lbBePoolId')]"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-09-01",
              "name": "[variables('diagnosticsStorageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "accessTier": "Hot",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "supportsHttpsTrafficOnly": true
              }
            },
            {
              "type": "Microsoft.Compute/disks",
              "apiVersion": "2021-12-01",
              "name": "[variables('dataDiskName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Premium_LRS"
              },
              "properties": {
                "creationData": {
                  "createOption": "Empty"
                },
                "diskSizeGB": "[parameters('dataDiskSize')]"
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2021-11-01",
              "name": "[variables('prefixedVMName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('msiResourceGroup')), 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('msiName')))]": {}
                }
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('instanceSize')]"
                },
                "osProfile": {
                  "computerName": "[toUpper(format('{0}{1}', variables('prefix'), parameters('vmName')))]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "linuxConfiguration": {
                    "disablePasswordAuthentication": true,
                    "ssh": {
                      "publicKeys": [
                        {
                          "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
                          "keyData": "[parameters('sshPublicKey')]"
                        }
                      ]
                    },
                    "provisionVMAgent": true
                  },
                  "customData": "[variables('cloudInit')]",
                  "allowExtensionOperations": true
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "Canonical",
                    "offer": "0001-com-ubuntu-server-focal",
                    "sku": "20_04-lts-gen2",
                    "version": "latest"
                  },
                  "osDisk": {
                    "diffDiskSettings": {
                      "option": "Local",
                      "placement": "ResourceDisk"
                    },
                    "caching": "ReadOnly",
                    "createOption": "FromImage"
                  },
                  "dataDisks": [
                    {
                      "lun": 0,
                      "createOption": "Attach",
                      "caching": "ReadWrite",
                      "managedDisk": {
                        "id": "[resourceId('Microsoft.Compute/disks', variables('dataDiskName'))]"
                      }
                    }
                  ]
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
                      "properties": {
                        "primary": true
                      }
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticsStorageAccountName'))).primaryEndpoints.blob]"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/disks', variables('dataDiskName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticsStorageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'keyvault')]",
        "[resourceId('Microsoft.Resources/deployments', 'network')]"
      ]
    }
  ]
}